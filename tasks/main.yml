---
- name: Install dependencies
  apt: pkg={{ item }} state=present
  with_items:
    - git
    - curl
    - build-essential
    - libssl-dev
  tags: nvm

- name: Check for nvm
  sudo: yes
  sudo_user: "{{ nvm.user }}"
  stat: path=~/.nvm
  register: nvm_path

- name: Install nvm
  sudo: yes
  sudo_user: "{{ nvm.user }}"
  git: repo=https://github.com/creationix/nvm.git dest=~/.nvm version={{ nvm.version }} accept_hostkey=True
  tags: nvm
  when: not nvm_path.stat.exists

- name: Source nvm
  sudo: yes
  sudo_user: "{{ nvm.user }}"
  lineinfile: >
    dest={{ nvm.profile_file }}
    line="source ~/.nvm/nvm.sh"
  tags: nvm

- name: Check for current node version
  sudo: yes
  sudo_user: "{{ nvm.user }}"
  command: sudo -iu {{ nvm.user }} source ~/.nvm/nvm.sh && node -v
  register: nvm_node_version
  ignore_errors: yes
  changed_when: false

- name: Install node
  command: sudo -iu {{ nvm.user }} source ~/.nvm/nvm.sh && nvm install {{ nvm.node_version }}
  tags: nvm
  when: nvm_node_version.stdout.find(nvm.node_version) == -1

- name: Set default node version to installed node
  command: sudo -iu {{ nvm.user }} source ~/.nvm/nvm.sh && nvm alias default {{ nvm.node_version }}
  tags: nvm
  when: nvm_node_version.stdout.find(nvm.node_version) == -1

- name: Search npm binary
  sudo: yes
  sudo_user: "{{ nvm.user }}"
  command: sudo -iu {{ nvm.user }} source ~/.nvm/nvm.sh && which npm
  register: npm_executable
  ignore_errors: yes
  changed_when: false

- name: Install general package
  sudo_user: "{{ nvm.user }}"
  npm: name={{ item }} global=yes executable={{ npm_executable.stdout }}
  with_items: nvm.packages
